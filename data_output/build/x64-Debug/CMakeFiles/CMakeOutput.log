The system is: Windows - 10.0.22621 - AMD64
Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
Compiler: C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.34.31933/bin/Hostx64/x64/cl.exe 
Build flags: 
Id flags:  

The output was:
0
Microsoft (R) C/C++ Optimizing Compiler Version 19.34.31933 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.

CMakeCCompilerId.c
Microsoft (R) Incremental Linker Version 14.34.31933.0
Copyright (C) Microsoft Corporation.  All rights reserved.

/out:CMakeCCompilerId.exe 
CMakeCCompilerId.obj 


Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.exe"

Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CMakeCCompilerId.obj"

The C compiler identification is MSVC, found in "E:/drafts/Opencl-ex1/Opencl-ex1/out/build/x64-Debug/CMakeFiles/3.24.202208181-MSVC_2/CompilerIdC/CMakeCCompilerId.exe"

Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler: C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.34.31933/bin/Hostx64/x64/cl.exe 
Build flags: 
Id flags:  

The output was:
0
Microsoft (R) C/C++ Optimizing Compiler Version 19.34.31933 for x64
Copyright (C) Microsoft Corporation.  All rights reserved.

CMakeCXXCompilerId.cpp
Microsoft (R) Incremental Linker Version 14.34.31933.0
Copyright (C) Microsoft Corporation.  All rights reserved.

/out:CMakeCXXCompilerId.exe 
CMakeCXXCompilerId.obj 


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.exe"

Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CMakeCXXCompilerId.obj"

The CXX compiler identification is MSVC, found in "E:/drafts/Opencl-ex1/Opencl-ex1/out/build/x64-Debug/CMakeFiles/3.24.202208181-MSVC_2/CompilerIdCXX/CMakeCXXCompilerId.exe"

Detecting C compiler ABI info compiled with the following output:
Change Dir: E:/drafts/Opencl-ex1/Opencl-ex1/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_b30ad && [1/2] Building C object CMakeFiles\cmTC_b30ad.dir\CMakeCCompilerABI.c.obj
[2/2] Linking C executable cmTC_b30ad.exe



Detecting CXX compiler ABI info compiled with the following output:
Change Dir: E:/drafts/Opencl-ex1/Opencl-ex1/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_3bc65 && [1/2] Building CXX object CMakeFiles\cmTC_3bc65.dir\CMakeCXXCompilerABI.cpp.obj
[2/2] Linking CXX executable cmTC_3bc65.exe



Determining if the CL_VERSION_3_0 exist passed with the following output:
Change Dir: E:/drafts/Opencl-ex1/Opencl-ex1/out/build/x64-Debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/Ninja/ninja.exe cmTC_24578 && [1/2] Building C object CMakeFiles\cmTC_24578.dir\CheckSymbolExists.c.obj
[2/2] Linking C executable cmTC_24578.exe


File E:/drafts/Opencl-ex1/Opencl-ex1/out/build/x64-Debug/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.8/include/CL/cl.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef CL_VERSION_3_0
  return ((int*)(&CL_VERSION_3_0))[argc];
#else
  (void)argc;
  return 0;
#endif
}
